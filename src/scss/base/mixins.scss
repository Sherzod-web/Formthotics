//TO %
@function percent($pxOne, $pxTwo) {
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}
//REM
@function rem($px) {
    $result: math.div($px, 16) + rem;
    @return $result;
}
//EM
@function em($pxOne, $pxTwo) {
    $result: math.div($pxOne, $pxTwo) + em;
    @return $result;
}
// ==============================================================================================================================================================================================================================================================================================================================
// Адаптивное свойство
@mixin adaptiveValue($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type==1 {
        // Только если меньше контейнера
        #{$property}: $startSize + px;
        @media (max-width: #{$containerWidth + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$containerWidth - 320}));
        }
    } @else if $type==2 {
        // Только если больше контейнера
        #{$property}: $minSize + px;
        @media (min-width: #{$containerWidth + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        // Всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}
